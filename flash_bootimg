#!/bin/bash
cd ${PWD}
export KERNEL_IS_HERE=$(echo $PWD)
export SCRIPT_BUILD_OUTPUT=$KERNEL_IS_HERE/build/output
export SCRIPT_BUILD_OUTPUT_MODULES=$SCRIPT_BUILD_OUTPUT/system/lib/modules

if [[ -e build/output/boot.img ]]; then
  echo "boot.img found, continuing"
else
  echo "boot.img not found, run build_bootimg first"
  exit
fi;

function copy_modules_to_output 
{
	rm -Rf /tmp/modules
	mkdir /tmp/modules
	find /home/syukri/android/out/target/product/p880/system/lib/modules/ -name "*.ko" -exec cp {} /tmp/modules/ \;
	cp /tmp/modules/*.ko build/output/system/lib/modules/
}

function push_image 
{
		echo "Pushing boot.img to sdcard"
		cd build/
		adb push $SCRIPT_BUILD_OUTPUT/boot.img /sdcard/boot.img
}
		
function flash_image
{
	echo "Flashing boot.img to mmcblk0p2..."
	adb shell  'cat /sdcard/boot.img > /dev/block/mmcblk0p2'
	adb shell  'sync'
}		

function install_modules_to_phone 
{
	echo "Removing /sdcard/modules folder"
	adb shell rm -R /sdcard/modules
	echo "Creating new /sdcard/modules folder"
	adb shell mkdir /sdcard/modules
	echo "Pushing modules to phone"
	find $SCRIPT_BUILD_OUTPUT_MODULES -name "*.ko" -exec adb push {} /sdcard/modules \;
	echo "Moving modules from /sdcard/modules to /system/lib/modules"
	adb shell 'busybox mv -f /sdcard/modules/*.ko /system/lib/modules/'
}

function push_modules_confirm 
{
	echo "Do you want to push the modules? y / n"
	read modules
		if [ ${modules} == "y"]
		then
		install_modules_to_phone
		fi;
}

function set_modules_permission 
{
echo "Setting module permissions to RW-R-R (644)"
adb shell chmod 644 '/system/lib/modules/*.ko'
rm -f modules/*.ko
}

function flash_bootimg 
{
	echo "Flashing build/output/boot.img to phone"
	push_image


	echo "Begin Flashing"
	flash_image
	echo "Kernel part done!"

	echo "Begin modules related procedures"
	push_modules_confirm

	echo "Mounting System as RW"
	adb remount

	echo "Pushing modules to /system/lib/modules"
	install_modules_to_phone

	set_modules_permission

	echo "Rebooting Phone..."
	adb reboot
}

function make_zip
{
	echo "Creating flashable zip"
	export CURR=$PWD
	cd build/output/
	find . -type f -print|zip -0 ../out_zip/optimus-prime.zip -@
	cd $CURR
}

function main 
{
	echo "Starting work"
	echo
	echo "Copying modules from $OUT_DIR to /build/output/modules"
	copy_modules_to_output
	echo 
	make_zip
}

main